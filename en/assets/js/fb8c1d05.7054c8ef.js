"use strict";(self.webpackChunkenderdragon_wiki=self.webpackChunkenderdragon_wiki||[]).push([[6556],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>m});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),f=r,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return a?t.createElement(m,l(l({ref:n},c),{},{components:a})):t.createElement(m,l({ref:n},c))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=f;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}f.displayName="MDXCreateElement"},2131:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var t=a(7462),r=(a(7294),a(3905));const i={sidebar_position:1},l="Basics",o={unversionedId:"English version/Expansion/Detailed Explanation/Basics",id:"English version/Expansion/Detailed Explanation/Basics",title:"Basics",description:"If you have some Java foundation, using Groovy will be very easy.",source:"@site/docs/English version/Expansion/Detailed Explanation/Basics.md",sourceDirName:"English version/Expansion/Detailed Explanation",slug:"/English version/Expansion/Detailed Explanation/Basics",permalink:"/EnderDragon-Wiki/en/English version/Expansion/Detailed Explanation/Basics",draft:!1,editUrl:"https://github.com/iXanadu13/EnderDragon-Wiki/blob/main/docs/English version/Expansion/Detailed Explanation/Basics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Detailed Explanation",permalink:"/EnderDragon-Wiki/en/category/detailed-explanation"},next:{title:"Register Listener",permalink:"/EnderDragon-Wiki/en/English version/Expansion/Detailed Explanation/Register Listener"}},s={},p=[{value:"Variable Definition",id:"variable-definition",level:2},{value:"Function Definition",id:"function-definition",level:2},{value:"Global Variable",id:"global-variable",level:2},{value:"New Object",id:"new-object",level:2},{value:"Loop",id:"loop",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...a}=e;return(0,r.kt)(u,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"basics"},"Basics"),(0,r.kt)("p",null,"If you have some Java foundation, using Groovy will be very easy."),(0,r.kt)("h2",{id:"variable-definition"},"Variable Definition"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"var"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"def")," Define variables(automatic inference type)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'var test = 114\ndef test2 = "Hello"\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"final")," Defining Constants(automatic inference type)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"final test = 114\n//test = 114514  ->  Non repeatable assignment\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<Type>")," Define a specified type variable(same as Java)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'String str = "Hello Groovy"\n')),(0,r.kt)("h2",{id:"function-definition"},"Function Definition"),(0,r.kt)("p",null,"Actually, a function is also a variable"),(0,r.kt)("p",null,"Using the keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"def"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"def test() {\n    // your code\n}\n")),(0,r.kt)("p",null,"Specify the return value type to define the function(same as Java):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"String calc(String input){\n    // your code\n}\n\nstatic void doSomething(){//static method\n    // your code\n}\n")),(0,r.kt)("p",null,"Closure Definition:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"def sum={\n    a,b -> return a+b\n}\n")),(0,r.kt)("p",null,"Method reference:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'def str = "Hello, World!"\ndef toUpperCaseMethod = str.&toUpperCase\nprintln(toUpperCaseMethod())  //Output: HELLO, WORLD!\n')),(0,r.kt)("h2",{id:"global-variable"},"Global Variable"),(0,r.kt)("p",null,'In fact, there is no concept of "global variables" in Groovy, where "global" refers to being accessible anywhere in the script.'),(0,r.kt)("p",null,"Similar to Java, it cannot be directly defined in Groovy. You need to set a layer of classes outside."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'class TestClass{\n    static def value = "abc"\n    def value2 = "test"\n}\nstatic void enable(){\n    Bukkit.broadcastMessage(TestClass.value)  //Static variables can be directly accessed through classes\n    def clazz = new TestClass()\n    Bukkit.broadcastMessage(clazz.value2)  //Member variables need to be accessed through objects\n}\n')),(0,r.kt)("p",null,"After reloading, you can see this output in console:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[00:38:23 INFO]: abc\n[00:38:23 INFO]: test\n")),(0,r.kt)("p",null,"Simply put, as long as you don't reload the plugin or close the server, this variable will always exist and you can call it anywhere."),(0,r.kt)("h2",{id:"new-object"},"New Object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'def map = new HashMap()  //define using "def"\n\nHashMap map2 = new HashMap()  //not specify the data type stored in HashMap\n\nHashMap<String, String> map2 = new HashMap()  //Specify the data type stored in HashMap, like Java\n')),(0,r.kt)("h2",{id:"loop"},"Loop"),(0,r.kt)("p",null,"for loop(same as Java)\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"for(int i=0;i<10;i++){\n    // your code\n}\n")),(0,r.kt)("p",null,"enhanced for loop\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"def numbers = [1, 2, 3, 4, 5]\nfor (num in numbers) {\n    println(num)\n}\nfor (int num : numbers) {//same as Java\n    println(num)\n}\n")),(0,r.kt)("p",null,"forEach loop\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"def numbers = [1, 2, 3, 4, 5]\nnumbers.each { num ->\n    println(num)\n}\nnumbers.forEach(num -> println(num)) //same as Java\n")))}d.isMDXComponent=!0}}]);